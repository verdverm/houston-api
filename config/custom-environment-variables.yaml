webserver:
  port: "WEBSERVER__PORT"
  endpoint: "WEBSERVER__ENDPOINT"
  subscriptions: "WEBERVER__SUBCRIPTIONS"

prisma:
  endpoint: "PRISMA__ENDPOINT"
  secret: "PRISMA__SECRET"
  debug:
    __name: "PRISMA__DEBUG"
    __format: "json"

database:
  migrations:
    tableName: "DATABASE__MIGRATIONS__TABLE_NAME"
    schemaName: "DATABASE__MIGRATIONS__SCHEMA_NAME"
    disableTransactions:
      __name: "DATABASE__MIGRATIONS__DISABLE_TRANSACTIONS"
      __format: "json"
  connection: "DATABASE__CONNECTION"

commander:
  enabled:
    __name: "COMMANDER__ENABLED"
    __format: "json"
  host: "COMMANDER__HOST"
  port: "COMMANDER__PORT"

elasticsearch:
  enabled:
    __name: "ELASTICSEARCH__ENABLED"
    __format: "json"
  client:
    host: "ELASTICSEARCH__CLIENT__HOST"
    log: "ELASTICSEATCH__CLIENT__LOG"
  mockInDevelopment:
    __name: "ELASTICSEARCH__MOCK_IN_DEVELOPMENT"
    __format: "json"

prometheus:
  enabled:
    __name: "PROMETHEUS__ENABLED"
    __format: "json"
  host: "PROMETHEUS__HOST"
  port: "PROMETHEUS__PORT"
  pollInterval: "PROMETHEUS__POLL_INTERVAL"

email:
  enabled:
    __name: "EMAIL__ENABLED"
    __format: "json"
  preview:
    __name: "EMAIL__PREVIEW"
    __format: "json"
  reply: "EMAIL__REPLY"
  smtpUrl: "EMAIL__SMTP_URL"

stripe:
  enabled:
    __name: "STRIPE__ENABLED"
    __format: "json"
  secretKey: "STRIPE__SECRET_KEY"

repository: "REPOSITORY"

helm:
  baseDomain: "HELM__BASE_DOMAIN"
  registryAuthSecret: "HELM__REGISTRY_AUTH_SECRET"
  acme:
    __name: "HELM__ACME"
    __format: "json"
  rbacEnabled:
    __name: "HELM__RBAC_ENABLED"
    __format: "json"
  releaseName: "HELM__RELEASE_NAME"
  releaseNamespace: "HELM__RELEASE_NAMESPACE"
  releaseVersion: "HELM__RELEASE_VERSION"
  singleNamespace:
    __name: "HELM__SINGLE_NAMESPACE"
    __format: "json"

auth:
  local:
    enabled:
      __name: "AUTH__LOCAL__ENABLED"
      __format: "json"

  openidConnect:
    clockTolerance: 
      __name: "AUTH__OPENID_CONNECT__CLOCK_TOLERANCE"
      __format: "json"
    # A single JSON string of all the OIDC providers to use. If this env var is
    # set then the convinence settings below will be ignored.
    __name: "AUTH__OPENID_CONNECT_PROVIDERS"
    __format: "json"
    auth0:
      enabled:
        __name: "AUTH__OPENID_CONNECT__AUTH0__ENABLED"
        __format: "json"
      clientId: "AUTH__OPENID_CONNECT__AUTH0__CLIENT_ID"
      discoveryUrl: "AUTH__OPENID_CONNECT__AUTH0__DISCOVERY_URL"

    google:
      enabled:
        __name: "AUTH__OPENID_CONNECT__GOOGLE__ENABLED"
        __format: "json"
      clientId: "AUTH__OPENID_CONNECT__GOOGLE__CLIENT_ID"
      discoveryUrl: "AUTH__OPENID_CONNECT__GOOGLE__DISCOVERY_URL"

    okta:
      enabled:
        __name: "AUTH__OPENID_CONNECT__OKTA__ENABLED"
        __format: "json"
      clientId: "AUTH__OPENID_CONNECT__OKTA__CLIENT_ID"
      discoveryUrl: "AUTH__OPENID_CONNECT__OKTA__DISCOVERY_URL"

  github:
    enabled:
      __name: "AUTH__GITHUB__ENABLED"
      __format: "json"

jwt:
  passphrase: "JWT__PASSPHRASE"
  certPath: "JWT__CERT_PATH"
  authDuration: "JWT__AUTH_DURATION"

  registry:
    certPath: "JWT__REGISTRY__CERT_PATH"
    issuer: "JWT__REGISTRY__ISSUER"
    service: "JWT__REGISTRY__SERVICE"
    baseImages:
      __name: "JWT__REGISTRY__BASE_IMAGES"
      __format: "json"

publicSignups:
  __name: "PUBLIC_SIGNUPS"
  __format: "json"

emailConfirmation:
  __name: "EMAIL_CONFIRMATION"
  __format: "json"

deployments:
  logHelmValues:
    __name: "DEPLOYMENTS__LOG_HELM_VALUES"
    __format: "json"
  database:
    enabled:
      __name: "DEPLOYMENTS__DATABASE__ENABLED"
      __format: "json"
    retainOnDelete:
      __name: "DEPLOYMENTS__DATABASE__RETAIN_ON_DELETE"
      __format: "json"
    allowRootAccess:
      __name: "DEPLOYMENTS__DATABASE__ALLOW_ROOT_ACCESS"
      __format: "json"
    connection: "DEPLOYMENTS__DATABASE__CONNECTION"

analytics:
  enabled:
    __name: "ANALYTICS__ENABLED"
    __format: "json"
  writeKey: "ANALYTICS__WRITE_KEY"
